image: jakzal/phpqa:php8.1

stages:
    - SecurityChecker
    - CodingStandards
    - UnitTests
    - Eslint
    - Deploy

security-checker:
    stage: SecurityChecker
    script:
        - cd back
        - composer install
        - local-php-security-checker  --path=./composer.lock
    allow_failure: false

phpcs:
    stage: CodingStandards
    script:
        - cd back
        - composer install
        - phpcs -v --standard=PSR12 --ignore=./src/Kernel.php ./src
    allow_failure: false

phpstan:
    stage: CodingStandards
    script:
        - cd back
        - composer install
        - phpstan analyse ./src
    allow_failure: false

eslint:
    image: node:16
    stage: Eslint
    script:
        - cd front
        - npm install
        - npm install eslint
        - npx eslint src/*.js --max-warnings=0
    allow_failure: false

services:
  - mysql:5.7

variables:
  MYSQL_DATABASE: "symfony_test"
  MYSQL_ROOT_PASSWORD: "symfony"
  MYSQL_USER: "symfony"
  MYSQL_PASSWORD: "symfony"
  MYSQL_HOST: mysql

unit-tests:
  stage: UnitTests
  script:
    - apt-get update && apt-get install -y libpq-dev libicu-dev libxml2-dev && docker-php-ext-install pdo pdo_mysql pdo_pgsql intl xml zip
    - cd back
    - composer install
    - php bin/console doctrine:database:create --if-not-exists
    - php bin/console doctrine:schema:update --force --no-interaction
    - php bin/console app:fill-books 200
    # - php bin/console app:fill-user
    - php bin/phpunit
  allow_failure: false

deploy:
  image: curlimages/curl:latest
  stage: Deploy
  script:
    - ./api.sh
  only:
    - main
